version: '3.8'

services:

  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: kafka
    hostname: kafka
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      hh-network:
        ipv4_address: 132.12.0.6

  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    networks:
      hh-network:
        ipv4_address: 132.12.0.2

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@system.vn
      - PGADMIN_DEFAULT_PASSWORD=admin123
    restart: always
    ports:
      - '6052:80'
    networks:
      hh-network:
        ipv4_address: 132.12.0.7

  postgres-db:
    image: postgres:latest
    container_name: hh_postgres
    ports:
      - '5432:5432'
    restart: always

    env_file:
      - ./.env
    networks:
      hh-network:
        ipv4_address: 132.12.0.5

  mysql-db:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=identity
      - MYSQL_ROOT_PASSWORD=@123456
    ports:
      - '3306:3306'
    networks:
      hh-network:
        ipv4_address: 132.12.0.4

  mysql-workbench:
    image: lscr.io/linuxserver/mysql-workbench:latest
    cap_add:
      - IPC_LOCK
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - CUSTOM_USER=root
      - PASSWORD=@123456
    ports:
      - 2300:3000
      - 2301:3001
    restart: unless-stopped
    networks:
      hh-network:
        ipv4_address: 132.12.0.3

  gateway:
    build:
      context: ./api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=${ENVIRONMENT:-development}
      - JWT_SIGNER_KEY=${JWT_SIGNER_KEY}
    env_file:
      - .env
    ports:
      - "8888:8888"
    networks:
      hh-network:
        ipv4_address: 132.12.0.8

  identity-api:
    build:
      context: ./identity-service
    environment:
      - SPRING_PROFILES_ACTIVE=${ENVIRONMENT:-development}
      - JWT_SIGNER_KEY=${JWT_SIGNER_KEY}
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - mysql-db
    networks:
      hh-network:
        ipv4_address: 132.12.0.9

  profile-api:
    build:
      context: ./profile-service
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - DATABASE_URL=${PROFILE_DB_URL}
      - SECRET_KEY=${JWT_SIGNER_KEY}
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      - postgres-db
    networks:
      hh-network:
        ipv4_address: 132.12.0.10

  blog-api:
    build:
      context: ./blog-service
      dockerfile: blog-api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ASPNETCORE_URLS=http://+:5050
      - SIGNER_KEY=${JWT_SIGNER_KEY}
      - DB_CONNECT=${BLOG_DB_URL}
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "5050:5050"
    networks:
      hh-network:
        ipv4_address: 132.12.0.11


networks:
  hh-network:
    driver: bridge
    ipam:
      config:
        - subnet: 132.12.0.0/16