// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"hhub/connection-service/internal/controllers"
	"hhub/connection-service/internal/repositories/follow"
	"hhub/connection-service/internal/repositories/friend"
	"hhub/connection-service/internal/services/follow"
	"hhub/connection-service/internal/services/friend"
	"hhub/connection-service/third_party/cache/redis"
	"hhub/connection-service/third_party/database/mysql"
)

// Injectors from follow_wire.go:

func InitFollowController() (*controllers.FollowController, error) {
	db := mysql.GetInstance()
	iFollowRepository := repositories_follow.NewFollowRepository(db)
	redisClient := cache.NewRedis()
	iFollowService := services_follow.NewFollowService(iFollowRepository, redisClient)
	followController := controllers.NewFollowController(iFollowService)
	return followController, nil
}

// Injectors from friend_wire.go:

func InitFriendController() (*controllers.FriendController, error) {
	db := mysql.GetInstance()
	iFriendRepository := repositories_friend.NewFriendRepository(db)
	iFollowRepository := repositories_follow.NewFollowRepository(db)
	redisClient := cache.NewRedis()
	iFollowService := services_follow.NewFollowService(iFollowRepository, redisClient)
	iFriendService := services_friend.NewFriendService(iFriendRepository, iFollowService)
	friendController := controllers.NewFriendController(iFriendService)
	return friendController, nil
}
