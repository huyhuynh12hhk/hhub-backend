server:
  port: 9000

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: TRACE
    org.springframework.security.oauth2: TRACE

spring:
  application:
    name: auth-server
  datasource:
    url: "jdbc:mysql://localhost:3386/identity"
    driverClassName: "com.mysql.cj.jdbc.Driver"
    username: root
    password: 123A123
  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  jackson:
    serialization:
      indent-output: true
  data:
    redis:
      host: localhost
      port: 6339
      #      host: 13.233.43.130
      #      port: 6379
      password: testpass
      lettuce:
        pool:
          max-active: 10 # Maximum number of active connections in the pool
          max-idle: 5 # Maximum number of idle connections in the pool
          min-idle: 5 # Minimum number of idle connections in the pool
      connect-timeout: 30000 #milliseconds
  elasticsearch:
    uris: http://localhost:9200
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        "[spring.json.type.mapping]": userSaved:shared.hub.auth.model.event.UserSavedEvent
    consumer:
      group-id: auth-user
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  security:
    oauth2:
      authorizationserver:
        issuer: http://localhost:9000
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9000
          jwt-set-uri: http://localhost:9000/oauth2/jwks
#      client:
#        registration:
#          google:
#            clientId: ${GOOGLE_CLIENT_ID}
#            clientSecret: ${GOOGLE_CLIENT_SECRET}
#            scope:
#              - email
#              - profile
#              - openid


feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 10000
      profile-service:
        loggerLevel: full

kafka:
  topic:
    user:
      saved: ${SAVE_USER_TOPIC:user.saved.success}

app:
  services:
    profile: http://localhost:8000