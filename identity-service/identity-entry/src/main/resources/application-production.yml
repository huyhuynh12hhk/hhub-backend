server:
  port: 8080

spring:
  application:
    name: identity-service
  datasource:
    url: ${IDENTITY_DB_URL}
    driverClassName: "com.mysql.cj.jdbc.Driver"
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
  jackson:
    serialization:
      indent-output: true
  data:
    redis:
      host: redis
      port: 6379
      password: ${REDIS_PASSWORD}
      lettuce:
        pool:
          max-active: 10 # Maximum number of active connections in the pool
          max-idle: 5 # Maximum number of idle connections in the pool
          min-idle: 5 # Minimum number of idle connections in the pool
      connect-timeout: 30000 # Connection timeout (in milliseconds)
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      retries: 0
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: identity_common
      auto-offset-reset: earliest
      enable-auto-commit: false
      auto-commit-interval: 100
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    listener:
      missing-topics-fatal: false
      ack-mode: manual_immediate # commit when call acknowledgment.acknowledge()
  threads:
    virtual:
      enabled: true
jwt:
  signerKey: ${JWT_SIGNER_KEY}
  valid-duration: ${EXPIRY_TIME} # in seconds
  refreshable-duration: ${REFRESH_DURATION} # in seconds

app:
  services:
    profile: http://132.12.0.10:8000/profiles
    redisson: redis://redis:6379